# -*- coding: utf-8 -*-
"""MLZoomcamp_HW1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N8uVeKHNKb8vttFh5XMdPFdahFKp_pbm
"""

import pandas as pd
import numpy as np
 
import seaborn as sns
from matplotlib import pyplot as plt

"""ANS Q1:"""

np.__version__

"""---------------------------------------------------------------------------------------------------------------------------------------------------



ANS Q2:
"""

pd.__version__

"""-----------------------------------------------------------------------------------------
Get The Data : Car Prices
"""

!wget https://raw.githubusercontent.com/alexeygrigorev/mlbookcamp-code/master/chapter-02-car-price/data.csv

df = pd.read_csv('data.csv')
len(df)

df.head(3)

"""-----------------------------------------------------------------------------------
ANS Q3:
"""

df_BMW = df[df["Make"] == "BMW"] 
len(df_BMW)

mean = df_BMW["MSRP"].mean()
print(mean)

"""------------------------------------------------------------------------------
ANS Q4:
"""

df_after_2015 = df[df["Year"] >= 2015]
len(df_after_2015)

df_after_2015.isna().sum()

"""----------------------------------------------------------------------------------
ANS Q5:
"""

initial_mean = df_after_2015["Engine HP"].mean()
print(round(initial_mean))

df_after_2015["Engine HP"].fillna(int(df_after_2015["Engine HP"].mean()), inplace=True)
df_after_2015.isna().sum()

new_mean = df_after_2015["Engine HP"].mean()
print(round(new_mean))

"""-------------------------------------------------------------------------------
ANS Q6:
"""

df_RR = df[df["Make"] == "Rolls-Royce"] 
print("Data Length :" ,len(df_RR))
print(df_RR)

df_RR = df_RR[["Engine HP", "Engine Cylinders", "highway MPG"]]
df_RR.head()

new_df_RR = df_RR.drop_duplicates()
print(new_df_RR)

X = new_df_RR.to_numpy()
print(X)

XTX = X.transpose().dot(X)
print(XTX)

XTX = np.linalg.inv(XTX)
print(XTX)

XTX.sum()

"""---------------------------------------------------------------------------
ANS Q7:
"""

y = np.array([1000, 1100, 900, 1200, 1000, 850, 1300])
print(y)

w = XTX.dot(X.transpose())
print("w before multiply with y = \n", w)
print(" ")
w = w.dot(y)
print("w after multiply with y = \n", w)